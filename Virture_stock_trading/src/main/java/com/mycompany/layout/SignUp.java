/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.layout;

import com.mycompany.SingletonPattern.User;
import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;
//import saveFile.SaveFile;

/**
 *
 * @author ijaeyeong
 */
public class SignUp extends javax.swing.JFrame {
    boolean Check = false;
    User user = User.getInstance();
    /**
     * Creates new form SignUp
     */
    public SignUp() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SignupText = new javax.swing.JLabel();
        NameText = new javax.swing.JLabel();
        NameTextField = new javax.swing.JTextField();
        IdTextField = new javax.swing.JTextField();
        IdText = new javax.swing.JLabel();
        PasswordText = new javax.swing.JLabel();
        PasswordField = new javax.swing.JPasswordField();
        PasswordField2 = new javax.swing.JPasswordField();
        PasswordText2 = new javax.swing.JLabel();
        VerifyPassword = new javax.swing.JLabel();
        VerifyId = new javax.swing.JButton();
        ResiterButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(900, 550));
        setResizable(false);

        SignupText.setFont(new java.awt.Font("American Typewriter", 0, 36)); // NOI18N
        SignupText.setText("회원가입");

        NameText.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        NameText.setText("이름 : ");

        NameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameTextFieldActionPerformed(evt);
            }
        });

        IdText.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        IdText.setText("아이디 : ");

        PasswordText.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        PasswordText.setText("비밀번호 : ");

        PasswordField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PasswordField2KeyReleased(evt);
            }
        });

        PasswordText2.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        PasswordText2.setText("비밀번호 확인: ");

        VerifyPassword.setText(" ");

        VerifyId.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        VerifyId.setText("중복확인");
        VerifyId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VerifyIdActionPerformed(evt);
            }
        });

        ResiterButton.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        ResiterButton.setText("확인");
        ResiterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResiterButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(187, 187, 187)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(NameText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(NameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(IdText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(IdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(PasswordText)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(PasswordText2)
                                .addGap(7, 7, 7)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(PasswordField2)
                            .addComponent(PasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                            .addComponent(VerifyPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addComponent(VerifyId, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(218, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(SignupText)
                        .addGap(376, 376, 376))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(ResiterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(383, 383, 383))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(SignupText)
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(NameText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(NameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(VerifyId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(IdText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(IdTextField))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PasswordText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PasswordText2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PasswordField2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(VerifyPassword)
                .addGap(65, 65, 65)
                .addComponent(ResiterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void NameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameTextFieldActionPerformed

    private void PasswordField2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PasswordField2KeyReleased

        //           비밀번호 일치/불일치 확인 코드
        char[] passwordChars = PasswordField.getPassword();
        char[] passwordChars2 = PasswordField2.getPassword();

        boolean passwordsMatch = Arrays.equals(passwordChars, passwordChars2);
        String passwordStateText = passwordsMatch ? "비밀번호가 일치합니다." : "비밀번호가 일치하지 않습니다.";
        Color passwordStateColor = passwordsMatch ? Color.BLUE : Color.RED;

        VerifyPassword.setText(passwordStateText);
        VerifyPassword.setForeground(passwordStateColor);
    }//GEN-LAST:event_PasswordField2KeyReleased

    private void ResiterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResiterButtonActionPerformed
        //    회원가입 창에 비어있는 정보가 있으면 알림이 뜨는 코드 
        if (IdTextField.getText().isEmpty() || NameTextField.getText().isEmpty() || PasswordField.getPassword().length == 0 || PasswordField2.getPassword().length == 0) {
            JOptionPane.showMessageDialog(this, "모든 정보를 입력해주세요", "알림", JOptionPane.INFORMATION_MESSAGE);
        } else if(Check){
            user.setId(IdTextField.getText());
            user.setName(NameTextField.getText());
            user.setBalance(0.0);
            user.setPassword(new String(PasswordField.getPassword()));
            
            
            try {
            JSONArray users;

            // 파일에서 기존 데이터 읽어오기
            File file = new File("users.json");
            if (file.exists()) {
                JSONParser parser = new JSONParser();
                users = (JSONArray) parser.parse(new FileReader(file));
            } else {
                users = new JSONArray();
            }

            // 새로운 유저 데이터 추가
            JSONObject userData = new JSONObject();
            userData.put("id", user.getId());
            userData.put("username", user.getName());
            userData.put("password", user.getPassword());
            userData.put("balance", user.getBalance());
            users.add(userData);

            // 파일에 데이터 쓰기
            Files.write(Paths.get("users.json"), (users.toJSONString() + System.lineSeparator()).getBytes(), StandardOpenOption.CREATE, StandardOpenOption.TRUNCATE_EXISTING);
            JOptionPane.showMessageDialog(this, "회원가입 성공!", "알림", JOptionPane.INFORMATION_MESSAGE);
            this.setVisible(false);
            }
            catch (IOException | ParseException ex) {
            ex.printStackTrace();
            }
        }
        else if(!Check){
            JOptionPane.showMessageDialog(this, "아이디 중복을 해주세요", "알림", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_ResiterButtonActionPerformed

    private void VerifyIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VerifyIdActionPerformed
        try {
            JSONArray users;
            File file = new File("users.json");
            boolean duplicate = false;
            if (file.exists()) {
                JSONParser parser = new JSONParser();
                users = (JSONArray) parser.parse(new FileReader(file));

                for (Object user : users) {
                    JSONObject obj = (JSONObject) user;
                    if (obj.get("id").equals(IdTextField.getText())) {
                        // 중복된 아이디가 있음
                        duplicate = true;
                        break;
                    }
                }

            }

            if (duplicate) {
                JOptionPane.showMessageDialog(this, "중복된 아이디입니다.", "알림", JOptionPane.WARNING_MESSAGE);
            } 
            else if(IdTextField.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "아이디를 입력해주세요", "알림", JOptionPane.INFORMATION_MESSAGE);
            }
            else {
                JOptionPane.showMessageDialog(this, "사용 가능한 아이디입니다.", "알림", JOptionPane.INFORMATION_MESSAGE);
                Check = true;
            }
        } catch (IOException | ParseException ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_VerifyIdActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SignUp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel IdText;
    private javax.swing.JTextField IdTextField;
    private javax.swing.JLabel NameText;
    private javax.swing.JTextField NameTextField;
    private javax.swing.JPasswordField PasswordField;
    private javax.swing.JPasswordField PasswordField2;
    private javax.swing.JLabel PasswordText;
    private javax.swing.JLabel PasswordText2;
    private javax.swing.JButton ResiterButton;
    private javax.swing.JLabel SignupText;
    private javax.swing.JButton VerifyId;
    private javax.swing.JLabel VerifyPassword;
    // End of variables declaration//GEN-END:variables
}
